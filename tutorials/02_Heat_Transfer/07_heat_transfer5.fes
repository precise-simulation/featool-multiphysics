{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"20-May-2021","descr":["This example models heated steam at a constant temperature of _120 C_ flowing through a aluminium pipe with 3 cm diameter. Heat loss to the surrounding cool air (at _25 C_ and heat transfer coefficient of _h = 60 W/m2 C_) is computed for a plain pipe, and also a pipe where 200 cooling fins per meter has been added. The simulation results are also compared with theoretical solutions.","","Reference:","","[1] Cengel, Yunus A., Heat Transfer: A Practical Approach, WCB/McGraw-Hill, 1998."],"dim":3,"image":"heat_transfer5.jpg","keyw":["heat_conduction","heat_exchanger","validation"],"mlver":"R2019a","name":"heat_transfer5","phys":["Heat Transfer"],"system":"","time":737910,"title":"Cooling Effect of Adding Fins","type":"Heat Transfer","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","radio_3d",1,"Callback",[]],
["uicontrol","popup_physsel",["Heat Transfer"],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["uitext*",[],"Due to symmetry it is sufficient to model a small section, here taken as quarter section of length _5 mm_ (this model would also be possible to reduce to 2D axisymmetry)."],
["uicontrol","button_cone_cylinder",[],"Callback",[]],
["uicontrol","edit_radius_1","0.015","Callback",[]],
["uicontrol","edit_radius_2","0.015","Callback",[]],
["uicontrol","edit_length","1/200","Callback",[]],
["uicontrol","edit_axis","0 0 1","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","button_cone_cylinder",[],"Callback",[]],
["uicontrol","edit_radius_1","0.0145","Callback",[]],
["uicontrol","edit_radius_2","0.0145","Callback",[]],
["uicontrol","edit_length","1/200","Callback",[]],
["uicontrol","edit_axis","0 0 1","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["+ C1","+ C2"],"Callback",[]],
["uicontrol","button_subtract_gobj",[],"Callback",[]],
["uitext*",[],"Then create a block overlapping a quarter and intersect it with the resulting cylindrical pipe shell."],
["uicontrol","button_block",[],"Callback",[]],
["uicontrol","edit_x_max","0.015","Callback",[]],
["uicontrol","edit_y_max","-0.015","Callback",[]],
["uicontrol","edit_z_max","1/200","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["+ CS1","+ B1"],"Callback",[]],
["uicontrol","button_intersect_gobj",[],"Callback",[]],
["imgcap"],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uicontrol","grid_hmax","0.0005"],
["uicontrol","grid_generate",[],"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"In the _Equation Settings_ dialog box, set the thermal conductivity to _180 W/m C_, the other coefficients will not be used, they can be left to their default values. Note that it is up to the user to define and use a consistent system of units for coefficients and parameters, here SI units is chosen."],
["uicontrol*","k_ht","180","Callback",[]],
["imgcap"],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext",[],"Set the temperature to _120 C_ for the inner boundary."],
["uicontrol*","list_seldom",["6"],"Callback",[]],
["uicontrol*","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol*","edit_bccoef1_ht","120","Callback",[]],
["uitext",[],"The _Heat flux_ condition should be selected for the outer boundary, with a heat transfer coefficient _60 W/m C_ and surrounding bulk temperature of _25 C_. This condition prescribes the rate at which heat is lost to the surrounding air (which is not modeled here)."],
["uicontrol*","list_seldom",["1"],"Callback",[]],
["uicontrol*","popup_selbc_ht",["Heat flux"],"Callback",[]],
["uicontrol*","edit_bccoef2_ht","60","Callback",[]],
["uicontrol*","edit_bccoef3_ht","25","Callback",[]],
["imgcap"],
["uitext",[],"Select _Thermal insulation/symmetry_ for the rest of the boundaries. This condition is appropriate for boundaries that in reality are extended symmetrically as here."],
["uicontrol*","list_seldom",["2","3","4","5"],"Callback",[]],
["uicontrol*","popup_selbc_ht",["Thermal insulation/symmetry"],"Callback",[]],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uicontrol","button_solve",[],"Callback",[]],
["uitext*",[],"After the problem has been solved FEATool will automatically switch to postprocessing mode and show the computed Temperature where we can see that the outside of the pipe has been somewhat cooled due to heat loss."],
["uitext*",[],"We also can calculate the computed heat loss by integrating the heat flux on the outer boundary and compare it with the theoretical solution."],
["uimenu",["Post","Boundary Integration..."],[],"Callback",[]],
["uicontrol","list_seldom",["1"],"Callback",[]],
["uicontrol","popup_intexpr",["Normal conductive heat flux, T"],"Callback",""],
["uitext*",[],"Multiply the expression for the outward heat flux with _4*200_ (accounting for simulation of a _5 mm_ quarter section) to get the total heat loss in _W/m_."],
["uicontrol","edit_intexpr","4*200*(-k_ht*(nx*Tx+ny*Ty+nz*Tz))","Callback",[]],
["uitext*",[],"The computed value should be close to the theoretical reference value of _537 W/m_. The small discrepancies are mainly due to a linear representation of the curved pipe boundary and can be improved by refining the mesh."],
["imgcap"],
["uicontrol","button_dlginteval_ok",[],"Callback",[]],
["uivalidate",[],"pass=0;try,i=intbdr('-4*200*k_ht*(nx*Tx+ny*Ty+nz*Tz)',fea,1);pass=abs(i-537)/537<0.025;catch,end"],
["imgcap"],
["uitext*",[],"To compare the heat loss with the modified geometry, first go back to _Geometry mode_ to add the fins."],
["uicontrol","button_geometry_mode",1,"Callback",""],
["uitext*",[],"Use the _undo geometry objects_ button to recover the original input shapes."],
["uicontrol","list_select_gobj",["+ CI1"],"Callback",""],
["uicontrol","button_undo_gobj","","Callback",""],
["uicontrol","list_select_gobj",["+ CS1"],"Callback",""],
["uicontrol","button_undo_gobj","","Callback",""],
["uitext*",[],"Add two cylinders for the fins."],
["uicontrol","button_cone_cylinder","","Callback",""],
["uicontrol","edit_radius_1","0.03","Callback",""],
["uicontrol","edit_radius_2","0.03","Callback",""],
["uicontrol","edit_length","1e-3","Callback",""],
["uicontrol","edit_axis","0 0 1","Callback",""],
["uicontrol","button_dlggobj_ok","","Callback",""],
["uicontrol","button_cone_cylinder","","Callback",""],
["uicontrol","edit_center","0 0 ","Callback",""],
["uicontrol","edit_center","0 0 1/200-1e-3","Callback",""],
["uicontrol","edit_radius_1","0.03","Callback",""],
["uicontrol","edit_radius_2","0.03","Callback",""],
["uicontrol","edit_length","1e-3","Callback",""],
["uicontrol","edit_axis","0 0 1","Callback",""],
["uicontrol","button_dlggobj_ok","","Callback",""],
["uitext*",[],"Extend the block to also cover the fins."],
["uicontrol","list_select_gobj",["+ B1"],"Callback",""],
["uicontrol","button_edit_gobj","","Callback",""],
["uicontrol","edit_x_max","0.03","Callback",""],
["uicontrol","edit_y_min","-0.03","Callback",""],
["uicontrol","button_dlggobj_ok","","Callback",""],
["imgcap"],
["uitext*",[],"Finally join the outer cylinder and fins, subtract the inner cylinder, and intersect with the block to generate the final shape."],
["uimenu",["Geometry","Combine Objects..."],"","Callback",""],
["uicontrol","edit_dlgedit","C1 + C3 + C4 - C2 & B1","Callback",""],
["imgcap"],
["uicontrol","button_dlgedit_ok","","Callback",""],
["uicontrol","button_grid_mode",1,"Callback",""],
["uicontrol","grid_hmax","0.0005"],
["uicontrol","grid_generate",[],"Callback",[]],
["imgcap"],
["uitext*",[],"Set the boundary conditions similar to the first simulation with the original shape (with the difference that there now are more boundary segments due to the added fins)."],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uicontrol","list_seldom",["3"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol","edit_bccoef1_ht","120","Callback",[]],
["uicontrol","list_seldom",["1","2","4","5","6","7"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Thermal insulation/symmetry"],"Callback",[]],
["uicontrol","list_seldom",["8","9","10","11","12"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Heat flux"],"Callback",[]],
["uicontrol","edit_bccoef2_ht","60","Callback",[]],
["uicontrol","edit_bccoef3_ht","25","Callback",[]],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uicontrol","button_solve",[],"Callback",[]],
["uitext*",[],"After solving we can clearly see how the fins help to cool the outer temperature."],
["uitext*",[],"Perform boundary integration of the heat flux as before and compare with the theoretical result _5320 W/m_, and note that with the added fins we now get almost 10 times more effective cooling due to the increased added surface area."],
["uimenu",["Post","Boundary Integration..."],"","Callback",""],
["uicontrol","list_seldom",["8","9","10","11","12"],"Callback",""],
["uicontrol","popup_intexpr",["Normal conductive heat flux, T"],"Callback",""],
["uicontrol","edit_intexpr","4*200*(-k_ht*(nx*Tx+ny*Ty+nz*Tz))","Callback",""],
["uicontrol","button_dlginteval_ok","","Callback",""],
["imgcap"],
["uivalidate",[],"pass=0;try,i=intbdr('-4*200*k_ht*(nx*Tx+ny*Ty+nz*Tz)',fea,8:12);pass=abs(i-5320)/5320<0.1;catch,end"]
]}
