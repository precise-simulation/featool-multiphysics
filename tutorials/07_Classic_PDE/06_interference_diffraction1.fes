{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"26-Feb-2019","descr":["This classic double-slit experiment considers a planar and periodic oscillating wave, which hits and passes two narrow slits. Assuming the slits are narrow enough, the passing waves will bend and cause an interference pattern, while diffraction will attenuate the resulting off-axis amplitude.","","In the example the Helmholtz equation is used to model the wave phenomena","","    -(Axx + Ayy) - k^2*A = 0","","where _A_ is the amplitude of the wave,and _k_ the wave number (_k = 2*pi/lambda_)."],"dim":2,"image":"interference_diffraction1.jpg","keyw":["pde","diffraction","Helmholtz_equation"],"mlver":"R2018b","name":"interference_diffraction1","phys":["Custom Equation"],"system":"","time":737517,"title":"Interference and Diffraction","type":"Custom Equation","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","06_interference_diffraction1.fes",""],
["overlay",["Interference and Diffraction",""],""],
["overlay",["","This classic double-slit experiment considers a planar and periodic oscillating wave, which hits and passes two narrow slits. Assuming the slits are narrow enough, the passing waves will bend and cause an interference pattern, while diffraction will attenuate the resulting off-axis amplitude."],""],
["msgbox","The tutorial can also be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Classic PDE** <txt>></txt><tts>,</tts> **Interference and Diffraction** <tts>,</tts> from the **File** menu, and followed along with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","popup_physsel",["Custom Equation"],"Callback",[]],
["uitext",[],"Enter `A` into the _Dependent Variable Names_ edit field. This will represent the amplitude of the wave."],
["uicontrol*","edit_depvar","A","Callback",[]],
["imgcap"],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["overlay",["Geometry Mode",""],1],
["uitext*",[],"The geometry consists of two small rectangles, representing the slits, connected to a half circle domain. First create a circle centered at the origin<tts>,</tts> with radius _0.8_."],
["uimenu",["Geometry","Create Object...","Circle"],[],"Callback",[]],
["uicontrol","edit_radius","0.8","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uitext",[],"Then create and subtract a rectangle <txt>(spanning _-0.8_ to _0.8_ in the x-direction, and _-0.8_ to _0_ in the y-direction)</txt>, from the lower half of the circle."],
["uimenu*",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol*","edit_x_min","-0.8","Callback",[]],
["uicontrol*","edit_x_max","0.8","Callback",[]],
["uicontrol*","edit_y_min","-0.8","Callback",[]],
["uicontrol*","edit_y_max","0","Callback",[]],
["uicontrol*","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["C1","R1"],"Callback",[]],
["uicontrol","button_subtract_gobj",[],"Callback",[]],
["imgcap"],
["uitext",[],"Create another rectangle, spanning _<tts>minus </tts>-0.06_ to _<tts>minus </tts>-0.1_ in the x-direction, and _<tts>minus </tts>-0.2_ to _0_ in the y-direction."],
["uimenu*",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol*","edit_x_min","-0.06","Callback",[]],
["uicontrol*","edit_x_max","-0.1","Callback",[]],
["uicontrol*","edit_y_min","-0.2","Callback",[]],
["uicontrol*","edit_y_max","0","Callback",[]],
["uicontrol*","button_dlggobj_ok",[],"Callback",[]],
["uitext",[],"Create the last rectangle, spanning _0.06_ to _-0.1_ in the x-direction, and _<tts>minus </tts>-0.2_ to _0_ in the y-direction."],
["uimenu*",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol*","edit_x_min","0.06","Callback",[]],
["uicontrol*","edit_x_max","0.1","Callback",[]],
["uicontrol*","edit_y_min","-0.2","Callback",[]],
["uicontrol*","edit_y_max","0","Callback",[]],
["uicontrol*","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["CS1","R2","R3"],"Callback",[]],
["uicontrol","button_join_gobj",[],"Callback",[]],
["imgcap"],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uicontrol","grid_hmax","0.015"],
["uicontrol","grid_generate",[],"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uicontrol","button_eqnedit_ce",[],"Callback",[]],
["uitext",[],"Enter <txt>`-(Ax_x + Ay_y) - k^2*A_t = 0`</txt><tts>the Helmholtz equation</tts> into the _Equation for A_ edit field."],
["uicontrol*","edit_eqn1","-(Ax_x + Ay_y) - k^2*A_t = 0","Callback",[]],
["imgcap"],
["uicontrol","button_dlgediteqn_ok",[],"Callback",[]],
["%uicontrol","popup_sfun_ce",["(P2/Q2) second order conforming"],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uitext",[],["Press the **Constants** _Toolbar_ button, or select the corresponding entry from the _Equation_ menu, and add the following modeling constants for the wave length <txt>_wl_</txt><tts>w l</tts>, and wave number _k_ in the _Model Constants and Expressions_ dialog box.","| Name | Expression |","|------|------------|","|  wl  |  0.08      |","|  k   |  pi*2/wl   |"]],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uitable*","table_dlgexpr_1_1","wl","CellEditCallback",[]],
["uitable*","table_dlgexpr_1_2","0.08","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_1","k","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_2","pi*2/wl","CellEditCallback",[]],
["imgcap"],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"First set zero flux (homogeneous Neumann) conditions for all the boundaries."],
["uitext",[],"Select all boundaries <txt>(**1 - 11**)</txt> in the _Boundaries_ list box."],
["uicontrol*","list_seldom",["1","2","3","4","5","6","7","8","9","10","11"],"Callback",[]],
["uitext",[],"Then select the **Neumann, g_A<tts>,</tts>** radio button, and enter `0` into the _<txt>Dirichlet/Neumann</txt> coefficient_ edit field."],
["uicontrol*","radio_bccoef12_ce",1,"Callback",[]],
["uicontrol*","edit_bccoef13_ce","0","Callback",[]],
["imgcap"],
["uitext*",[],"An incoming planar wave is present at the inlet, <txt>with the complex boundary condition _n*grad(A) + k*i*A = 2*k*i_</txt>, which can be implemented as a Neumann flux type boundary condition."],
["uitext",[],"Select **3** and **7** in the _Boundaries_ list box, and enter <txt>`-k*i*A + 2*k*i`</txt><tts>the complex expression</tts> into the _<txt>Dirichlet/Neumann</txt> coefficient_ edit field."],
["uicontrol*","list_seldom",["3","7"],"Callback",[]],
["uicontrol*","edit_bccoef13_ce","-k*i*A + 2*k*i","Callback",[]],
["imgcap"],
["uitext*",[],"The outlet is assumed non-reflective <txt>and therefore _n*grad(A) + k*i*A = 0_</txt>."],
["uicontrol","list_seldom",["10","11"],"Callback",[]],
["uicontrol","edit_bccoef13_ce","-k*i*A","Callback",[]],
["imgcap"],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uitext",[],"Press the **=** _Toolbar_ button <tts>with an equals to sign</tts> to call the solver."],
["uicontrol*","button_solve",[],"Callback",[]],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"After the problem has been solved FEATool will automatically switch to postprocessing mode, and display the computed wave amplitude<tts>,</tts> _A_. The interference pattern can clearly be seen, as the four lines where the waves have been completely canceled out."],
["imgcap"],
["uitext*",[],"The _Point/Line Evaluation_ tool can be used to visualize the interference and diffraction pattern at the boundary."],
["uimenu",["Post","Point/Line Evaluation..."],[],"Callback",[]],
["uitext",[],"Select **10** and **11** in the _Boundaries_ list box. This will automatically enter the corresponding boundary coordinates into the _Evaluation Coordinates_ edit fields. Then press _Apply_ or **OK** to finish and plot the amplitude curve."],
["uicontrol*","list_selbdrcoord",["10","11"],"Callback",[]],
["uicontrol*","buttons_dlgpntline_ok",[],"Callback",[]],
["imgcap"],
["uitext*",[],"Even though the values for boundary _11_ are plotted in reverse, one can clearly see the four intersections with the zero amplitude line. From theory the minima and maxima are given as _sin(th) = (n+0.5)*wl/L_ and _n*wl/L_, respectively (for _n=0, +-1, etc_ where _L_ is the distance between the slits), which here should be _0_ and _30_ degrees for the maxima, consistent with the results of the simulation."],
["figure*","Line Evaluation",{},"closeRequestFcn",{}],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""],
["uivalidate*",[],"pass=0;try,r=.8*.9;D=.16;lambda=.08;th=asin(([0,1]+0.5)*lambda/D);p=r*[sin(th);cos(th)];p=[[-p(1,:);p(2,:)],p(:,end:-1:1)];pass=all(abs(evalexpr('A',p,fea))<0.075);catch,end"]
]}
