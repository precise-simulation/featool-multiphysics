{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.14.2","date":"20-Jul-2021","descr":["This multiphysics example examines microfluidic flow and coupled mass transport due to electroosmosis in a channel with a T-shaped junction. With application of an electric field in a micro channel a flow effect is induced along the walls due to chemical reactions between the liquid and the wall material. This effect is called electro-osmotic flow (EOF), and can for example be used in chemical analysis to separate reactants and chemical species. The flow effect is here modeled with the _Helmholtz-Smoluchowski_ boundary condition [1,2] which prescribes a tangential slip velocity as","","_u(t) = miu(EOF) * E(t) = miu(EOF) * E - (E*n)n_","","where _miu(EOF) = epsilon*epsilon0*zeta/miu_ is the electroosmotic mobility. In this model, the walls are aligned with the coordinate axes, and the boundary condition can therefore be simplified to _-miu(EOF)*Vx_ and _-miu(EOF)*Vy_ for the horizontal and vertical boundaries, respectively (where _Vx_ and _Vy_ are the gradients of the electric potential _V_). A passive scalar representing a chemical analyte is injected at the inlet for a prescribed duration (concentration _1_ for _t <= 30_ and linearly decreasing for the next _10_ microseconds) whereby the transport, diffusion, and path of the species is tracked through the channel.","","References:","","[1] G.E. Karniadakis and A. Beskok, Microflows: fundamentals and simulation. Springer-Verlag, New York, Berlin, Heidelberg, 2001.","","[2] R.J. Yang, L.M. Fu, Y.C. Lin, Electroosmotic Flow in Microchannels. J. Colloid and Interface Science, 239:98-105, November 2001."],"dim":2,"image":"electroosmotic_flow1.jpg","keyw":["multiphysics","microfluidics","electroosmosis","mass-transport"],"mlver":"","name":"electroosmotic_flow1","phys":["Conductive Media DC","Convection and Diffusion","Navier-Stokes Equations"],"system":"","time":738357,"title":"Electro-Osmotic Flow","type":"Multiphysics","user":"precsim","ver":[1,14,2]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uitext",[],"In the _New Model_ dialog box, select **2D** for the _Space Dimensions_, and select **Conductive Media DC** from the _Select Physics_ drop-down menu (the physics modes for fluid flow and mass transport will be added later). Leave the space dimension and dependent variable names to their default values and press **OK** to finish the physics mode selection."],
["uicontrol*","radio_2d",0,"Callback",[]],
["uicontrol*","popup_physsel",["Conductive Media DC"],"Callback",[]],
["imgcap"],
["uicontrol*","button_dlgnew_ok",[],"Callback",[]],
["uitext*",[],"The geometry consists of a 45 by 55 micrometer T-shaped junction. One can either join two rectangles or use the polygon tool to create the shape of the geometry."], ["uimenu",["Geometry","Create Object...","Polygon"],[],"Callback",[]],
["uitable","table_pntpoly",[[0,2E-5],[5E-5,2E-5],[5E-5,0],[5.5E-5,0],[5.5E-5,4.5E-5],[5E-5,4.5E-5],[5E-5,2.5E-5],[0,2.5E-5]],[],[]],
["imgcap"],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["imgcap"],
["uitext",[],"Press the **Grid** mode button in the _Mode Toolbar_ to change mode and generate a default grid. The initial grid is usually quite coarse and will not give a very accurate solution, so click on the **Refine** button three or more times to create a finer and more accurate grid."],
["uicontrol*","button_grid_mode",1,"Callback",[]],
["uicontrol*","grid_refine",[],"Callback",[]],
["uicontrol*","grid_refine",[],"Callback",[]],
["uicontrol*","grid_refine",[],"Callback",[]],
["imgcap"],
["uitext",[],"Press the **Equation** mode button to switch from grid mode to physics and equation/subdomain specification mode. Change to the **+** tab, in the _Equation Settings_ dialog box that automatically opens, and add a _Navier-Stokes_ physics mode for the fluid flow and _Convection and Diffusion_ for the mass transport."],
["uicontrol*","button_equation_mode",1,"Callback",[]],
["uicontrol","tab_+",0,"Callback",[]],
["uicontrol","popup_physsel",["Navier-Stokes Equations"],"Callback",[]],
["uicontrol","button_addphys",[],"Callback",[]],
["uicontrol","rho_ns","1e3","Callback",[]],
["uicontrol","miu_ns","1e-3","Callback",[]],
["%uicontrol","button_eqnedit_ns",[],"Callback",[]],
["%uicontrol","edit_eqn1","rho_ns*u' - miu_ns*(2*ux_x + uy_y + vx_y) + p_x = Fx_ns","Callback",[]],
["%uicontrol","edit_eqn2","rho_ns*v' - miu_ns*(vx_x + uy_x + 2*vy_y) + p_y = Fy_ns","Callback",[]],
["%uicontrol","button_dlgediteqn_ok",[],"Callback",[]],
["uicontrol","tab_+",0,"Callback",[]],
["uicontrol","popup_physsel",["Convection and Diffusion"],"Callback",[]],
["uicontrol","button_addphys",[],"Callback",[]],
["uitext*",[],"The species diffusion is assumed to be constant and small, while convection is due to the osmotic-velocity given by the Navier-Stokes physics mode (coupling _u_ and _v_ for the _x_ and _y-velocities_, respectively)."],
["uicontrol","d_cd","1e-10","Callback",[]],
["uicontrol","u_cd","u","Callback",[]],
["uicontrol","v_cd","v","Callback",[]],
["imgcap"],
["uitext*",[],"For convection dominated transport problems numerical diffusion can help to ensure a more physical and non-oscillatory solution. In this case isotropic diffusion is added (most diffusive), but more accurate streamline diffusion (less diffusive), or high order shock-capturing artificial diffusion can also be used, but are more costly and may take longer to compute a solution."],
["uicontrol","button_artstab_cd",[],"Callback",[]],
["uicontrol","check_artstab_id",1,"Callback",[]],
["imgcap"],
["uicontrol","button_dlgartstab_ok",[],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"Boundary conditions are defined in _Boundary Mode_ and describes how the model interacts with the surrounding environment."],
["uitext*",[],"The electric potential should be set to _100 V_ and the left side inlet, and _30 V_ and _0_ at the top and bottom boundaries, respectively. Neutral _current flow_ conditions are used for the walls."],
["uitext",[],"First select all wall boundaries (here numbers **1**, **2**, **4**, **6**, and **7**) in the _Boundaries_ list box."],
["uicontrol*","list_seldom",["2","4","5","7","8"],"Callback",[]],
["uicontrol","popup_selbc_dc",["Current flow"],"Callback",[]],
["uitext",[],"Select the left inlet, boundary **6**."],
["uicontrol*","list_seldom",["6"],"Callback",[]],
["uicontrol","popup_selbc_dc",["Electric potential"],"Callback",[]],
["uicontrol","edit_bccoef1_dc","100","Callback",[]],
["uitext",[],"Select the top boundary **3**."],
["uicontrol*","list_seldom",["3"],"Callback",[]],
["uicontrol","popup_selbc_dc",["Electric potential"],"Callback",[]],
["uicontrol","edit_bccoef1_dc","30","Callback",[]],
["uitext",[],"Select the bottom outlet boundary **1**."],
["uicontrol*","list_seldom",["1"],"Callback",[]],
["uicontrol","popup_selbc_dc",["Electric potential"],"Callback",[]],
["uicontrol","edit_bccoef1_dc","0","Callback",[]],
["uicontrol","tab_ns",0,"Callback",[]],
["uitext*",[],"There should not be any forced flows or velocities prescribed, so first select _Neutral_ conditions for all the inlets and outlets."],
["uicontrol","list_seldom",["1","3","6"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Neutral outflow/stress boundary"],"Callback",[]],
["uitext*",[],"Helmholtz-Smoluchowski boundary condition couples the electric field and gradient of the potential to the velocity at the walls and is driving the flow here. Since the walls are parallel to the coordinate axis the tangential component boundary conditions can be reduced to _-5e-8*Vy_ and _-5e-8*Vx_ in the _x_ and _y-directions_."],
["uicontrol","list_seldom",["5","7"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Inlet/velocity"],"Callback",[]],
["uicontrol","edit_bccoef1_ns","-5e-8*Vx","Callback",[]],
["imgcap"],
["uicontrol","list_seldom",["2","4","8"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Inlet/velocity"],"Callback",[]],
["uicontrol","edit_bccoef2_ns","-5e-8*Vy","Callback",[]],
["uitext*",[],"No species transport should be allowed through the walls and _insulation_ conditions are therefore appropriate there."],
["uicontrol","tab_cd",0,"Callback",[]],
["uicontrol","list_seldom",["2","4","5","7","8"],"Callback",[]],
["uicontrol","popup_selbc_cd",["Insulation/symmetry"],"Callback",[]],
["uicontrol","list_seldom",["1","3"],"Callback",[]],
["uicontrol","popup_selbc_cd",["Convective flux/outflow"],"Callback",[]],
["uicontrol","list_seldom",["6"],"Callback",[]],
["uitext*",[],"The inlet concentration should be _1_ for _t < 3e-5_ and a linear decreasing function between _3e-5 < t < 4e-5_. This can be represented as the switch condition _(t<=3e-5)+(4e-5-t)/1e-5*(t>3e-5&t<4e-5)_ (where the logical conditions _<_, _<=_, and _>_ either evaluate to zero or one.)"],
["uicontrol","popup_selbc_cd",["Concentration"],"Callback",[]],
["uicontrol","edit_bccoef1_cd","(t<=3e-5)+(4e-5-t)/1e-5*(t>3e-5&t<4e-5)","Callback",[]],
["imgcap"],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uitext*",[],"Now that the problem is fully specified, press the **Solve** _Mode Toolbar_ button to switch to solve mode. Open the _Solver Settings_ dialog box and select the time dependent solver, time step _1e-5_ and simulation time _1.2e-3_ seconds."],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uicontrol","button_solver_settings",[],"Callback",[]],
["uicontrol","solver",[" Time-Dependent"],"Callback",[]],
["uicontrol","tstep","1e-5","Callback",[]],
["uicontrol","tmax","1.2e-3","Callback",[]],
["imgcap"],
["uicontrol","button_dlgsolversettings_ok",[],"Callback",[]],
["uicontrol*","button_solve",[],"Callback",[]],
["uitext*",[],"Press the **=** _Toolbar_ button to call the solver. After the problem has been solved FEATool will automatically switch to postprocessing mode and show the electric potential at the final time step."],
["imgcap"],
["uicontrol","button_post_settings",[],"Callback",[]],
["uitext*",[],"Also plot the velocity field to see how the majority of the flow takes the lower path."],
["uicontrol","post_surf",["Velocity field"],"Callback",[]],
["uicontrol","ffarrow",1,"Callback",[]],
["uicontrol","sarrowy","30","Callback",[]],
["uicontrol","sarrowx","30","Callback",[]],
["uicontrol","parrowcolor",["white"],"Callback",[]],
["uicontrol","post_arrow",["Velocity field"],"Callback",[]],
["uicontrol","button_dlgpost_apply",[],"Callback",[]],
["uitext*",[],"Finally plot the concentration at different times to see how the species is transported from the inlet to the outlet."],
["uicontrol","post_surf",["Concentration, c"],"Callback",[]],
["%uicontrol","fsolnum",["  1e-05"],"Callback",[]],
["%uicontrol","button_dlgpost_apply",[],"Callback",[]],
["uicontrol","fsolnum",[" 0.0001"],"Callback",[]],
["uicontrol","button_dlgpost_apply",[],"Callback",[]],
["%uicontrol","fsolnum",[" 0.0005"],"Callback",[]],
["%uicontrol","button_dlgpost_apply",[],"Callback",[]],
["uicontrol","fsolnum",["0.00075"],"Callback",[]],
["uicontrol","button_dlgpost_apply",[],"Callback",[]],
["uicontrol","fsolnum",["  0.001"],"Callback",[]],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["imgcap"],
["uitext*",[],"To create an animation of the whole process one can use the _Animate/Playback Solution..._ option from the _Post_ menu."],
["uitext*",[],"Also note that in order to save computational resources it is possible to first compute stationary solutions for the electric potential and velocity field (as they will not change with time), and keep them constant (de-activated subdomains) while computing the mass transport problem (thus reducing the memory and time required for the time-dependent solver). See the _Multi-Simulation Heat Exchanger_ for an example of this solution approach."],
["uivalidate",[],"pass=0;try,pass=all([evalexpr('sqrt(u^2+v^2)',[5.4e-5;.5e-5],fea),evalexpr('c',[5.4e-5;.5e-5],fea)]>0.01);catch,end"]
]}
