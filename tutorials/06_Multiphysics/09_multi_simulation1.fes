{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.12.0","date":"1-Apr-2021","descr":["This model illustrates the multi-solver simulation process for a coupled tube and fin heat exchanger. The flow field is first solved for using the OpenFOAM CFD solver, after which the temperature field is computed with the built-in FEA solver (using the known flow field as a input to the heat equation).","","The process splits and separates the equations, effectively turning a one-way coupled model to a two step solution process with two sequential problems. This allows for significant savings in computational time and resources, since the best and most efficient physics solvers can be used for each individual sub-problem."],"dim":3,"image":"multi_simulation1.jpg","keyw":["cfd","heat_exchanger","multi_simulation","openfoam"],"mlver":"R2019a","name":"multi_simulation1","phys":["Heat Transfer","Navier-Stokes Equations"],"system":"","time":738256,"title":"Multi-Simulation Heat Exchanger","type":"Multiphysics","user":"precsim","ver":[1,12,0]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","09_multi_simulation1.fes",""],
["overlay",["Multiphysics Tutorial","Multi-Simulation Heat Exchanger"],""],
["overlay",["","This model illustrates the multi-solver simulation process for a coupled tube and fin heat exchanger. The flow field is first solved using the OpenFOAM CFD solver, after which the temperature field is computed with the built-in <txt>FEA</txt><tts>F E A</tts> solver<txt> (using the known flow field as a input to the heat equation)</txt>."],""],
["overlay",["","The process splits and separates the equations, effectively turning a one-way coupled model to a two step solution process with two sequential problems. This allows for significant savings in computational time and resources, since the best and most efficient physics solvers can be used for each individual sub-problem."],""],
["msgbox","This tutorial can be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Multiphysics** <txt>></txt><tts>,</tts> **Multi-Simulation Heat Exchanger** <tts>,</tts> from the **File** menu, and followed along with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","radio_3d",1,"Callback",[]],
["uicontrol","popup_physsel",["Navier-Stokes Equations"],"Callback",[]],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["uitext*",[],"A heat transfer physics mode for the temperature field will be added and coupled later, after the flow field has been computed."],
["imgcap"],
["overlay",["Geometry Mode",""],1],
["uitext*",[],"By utilizing the symmetry in the _y_ and _z_ directions<tts>,</tts> the computational domain of the airflow can be significantly reduced to a slice between two fins and one tube. The resulting geometry can be constructed by subtracting the fins and a cylinder from a block."],
["uitext*",[],"The first step is to create the main block for the interior of the domain."],
["uicontrol","button_block",[],"Callback",[]],
["uicontrol","edit_x_max","20","Callback",[]],
["uicontrol","edit_y_max","5","Callback",[]],
["uicontrol*","edit_z_max","1","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uitext*",[],"Then create a cylinder and subtract it from the block."],
["uicontrol","button_cone_cylinder",[],"Callback",[]],
["uitext",[],"Enter `<txt>10</txt><tts>ten</tts> 0 0` into the edit field for the _center_ of the cylinder."],
["uicontrol*","edit_center","10 0 0","Callback",[]],
["uitext",[],"Enter `2.5` into the edit fields for both _radius 1_ and _radius 2_."],
["uicontrol*","edit_radius_1","2.5","Callback",[]],
["uicontrol*","edit_radius_2","2.5","Callback",[]],
["uicontrol","edit_axis","0 0 1","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["+ B1","+ C1"],"Callback",[]],
["uicontrol","button_subtract_gobj",[],"Callback",[]],
["uitext*",[],"Create the lower fin, and then make a copy with a z-translation to move it to the upper side."],
["uicontrol","button_block",[],"Callback",[]],
["uicontrol","edit_x_min","5","Callback",[]],
["uicontrol","edit_x_max","15","Callback",[]],
["uicontrol","edit_y_max","5","Callback",[]],
["uicontrol","edit_z_max","0.0625","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["+ B2"],"Callback",[]],
["uicontrol","button_copy_transform_gobj",[],"Callback",[]],
["uicontrol","edit_copyobj","1","Callback",[]],
["uicontrol","edit_geomdisp"," 0  0  0.9375","Callback",[]],
["uicontrol","button_dlgcopytransf_ok",[],"Callback",[]],
["uitext*",[],"Lastly, remove the two fins using the geometry formula _CS1 -<tts>minus</tts> B2 -<tts>minus</tts> B3_."],
["uimenu",["Geometry","Combine Objects..."],[],"Callback",[]],
["uicontrol","edit_dlgedit","CS1-B2-B3","Callback",[]],
["uicontrol","button_dlgedit_ok",[],"Callback",[]],
["imgcap"],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uitext*",[],"Generate a grid with the maximum target mesh size set to _0.2_. Although this is a rather coarse mesh, it saves computational time and is good enough for demonstration purposes and as a first study."],
["uicontrol","grid_hmax","0.2"],
["uicontrol","grid_generate",[],"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext*",[],"Enter a non-dimensionalized unit density <txt>of _1_</txt>, and a viscosity of _0.00526_. This is equivalent to a Reynolds number of _190_ based on the distance between the heat exchanger fins."],
["uicontrol","rho_ns","1","Callback",[]],
["uicontrol","miu_ns","0.00526","Callback",[]],
["%uicontrol","button_artstab_ns",[],"Callback",[]],
["%uicontrol","check_artstab_id",1,"Callback",[]],
["%uicontrol","edit_artstab_id","0.15","Callback",[]],
["%uicontrol","button_dlgartstab_ok",[],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"First, set the velocity on the inlet boundary in the x-direction to _1_."],
["uicontrol","list_seldom",["5"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Inlet/velocity"],"Callback",[]],
["uicontrol","edit_bccoef1_ns","1","Callback",[]],
["uitext*",[],"Then select the _Outflow/pressure_ condition for the outlet boundary."],
["uicontrol","list_seldom",["11"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Outflow/pressure"],"Callback",[]],
["uitext*",[],"Select the **Wall/no-slip** condition for the boundaries representing the fins and the cylinder."],
["uicontrol","list_seldom",["3","7","8","9","10","13","14","16"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Wall/no-slip"],"Callback",[]],
["uitext*",[],"Finally, select the _Symmetry/slip_ condition for the rest of the boundaries."],
["uicontrol","list_seldom",["1","2","4","6","12","15","17"],"Callback",[]],
["uicontrol","popup_selbc_ns",["Symmetry/slip"],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uitext*",[],"The OpenFOAM CFD solver will used to first solve for the flow field. Open the **OpenFOAM** solver settings dialog box and set the tolerance for convergence to <txt>_1e-4_</txt><tts>one E minus 4</tts>."],
["uicontrol","button_solve_openfoam",[],"Callback",[]],
["uicontrol","of_tol","1e-4","Callback",[]],
["%uicontrol","of_et","2","Callback",[]],
["uitext",[],"Press the **Solve** button to start the OpenFOAM solver. The view will switch to show the convergence process for the solution variables."],
["imgcap"],
["uicontrol*","of_solve_button",[],"Callback",[]],
["%uicontrol","button_solver_settings",[],"Callback",[]],
["%uicontrol","nlrlx","0.9","Callback",[]],
["%uicontrol","button_dlgsolversettings_ok",[],"Callback",[]],
["%uicontrol","button_solve",[],"Callback",[]],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"After the flow problem has been solved<tts>,</tts> FEATool will automatically switch to postprocessing mode<tts>,</tts> and display the resulting velocity field."],
["uitext*",[],"Open the _Postprocessing_ settings dialog box<tts>,</tts> and change from _surface_ to _slice_ plot<tts>,</tts> to help see the interior of the flow field."],
["uicontrol","button_post_settings",[],"Callback",[]],
["uicontrol","ffsurf",0,"Callback",[]],
["uicontrol","ffslice",1,"Callback",[]],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["uitext*",[],"One can now clearly see that there is a large wake behind the cylinder, and how the fins create a very thin low velocity boundary layer."],
["imgcap"],
["uivalidate",[],"pass=0;try,pass=abs(5.3-intbdr('sqrt(u^2+v^2+w^2)',fea,11))/5.3<0.1;catch,end"],
["uitext*",[],"To couple and study the temperature field, switch back to _Equation_ mode<tts>,</tts> and add a _Heat Transfer_ physics mode to the model."],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"First _deactivate_ the equation for the flow field by _de-selecting_ the **active** button. This means that the flow variables will not be solved for and held constant, which saves computational effort. <txt>(Note that this decoupling is only possible for one-way coupled multiphysics problems. If the flow field and properties also depend on the temperature, both physics modes must be fully coupled and solved for together.)</txt>"],
["uicontrol*","toggle_active_ns",0,"Callback",[]],
["imgcap"],
["uitext",[],"Next switch to the tab with a **+**<tts>plus</tts> symbol, where additional physics modes can be added."],
["uicontrol*","tab_+",0,"Callback",[]],
["uicontrol","popup_physsel",["Heat Transfer"],"Callback",[]],
["uicontrol","button_addphys",[],"Callback",[]],
["uitext*",[],"Set the non-dimensionalized thermal conductivity to <txt>_3.76e-3_</txt><tts>3.76 E minus 3</tts>, while leaving the density and heat capacity at their default unit values. This is equivalent to a Prandtl number of _1.4_ <txt>(indicating a slight weighting toward convective transport)</txt>."],
["uicontrol","k_ht","3.76e-3","Callback",[]],
["uitext",[],"To couple the flow field to the convective terms for the temperature, enter the dependent variable names `u`, `v`, and `w` in the corresponding edit fields."],
["uicontrol*","u_ht","u","Callback",[]],
["uicontrol*","v_ht","v","Callback",[]],
["uicontrol*","w_ht","w","Callback",[]],
["imgcap"],
["uitext*",[],"As this model is dominated by convective flow effects<tts>,</tts> some amount of artificial and numerical stabilization is appropriate to add, which will ease convergence and smooth out oscillations."],
["uicontrol","button_artstab_ht",[],"Callback",[]],
["uicontrol","check_artstab_sd",1,"Callback",[]],
["uicontrol","edit_artstab_sd","1","Callback",[]],
["imgcap"],
["uicontrol","button_dlgartstab_ok",[],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"For the temperature boundary conditions set the inlet temperature to _0_, and the surfaces of the surrounding fins and cylinder to _1_."],
["uicontrol","tab_ht",0,"Callback",[]],
["uicontrol","list_seldom",["5"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol","edit_bccoef1_ht","0","Callback",[]],
["uicontrol","list_seldom",["3","7","8","9","10","13","14","16"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol","edit_bccoef1_ht","1","Callback",[]],
["uitext*",[],"For the outflow boundary select _Convective flux/outflow_."],
["uicontrol","list_seldom",["11"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Convective flux/outflow"],"Callback",[]],
["uitext*",[],"And finally select _Thermal insulation/symmetry_ for the symmetry boundaries."],
["uicontrol","list_seldom",["1","2","4","6","12","15","17"],"Callback",[]],
["uicontrol","popup_selbc_ht",["Thermal insulation/symmetry"],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uitext*",[],"Press the **Restart** button to solve the problem for the temperature field<tts>,</tts> using the already computed flow field <txt>(as the Navier-Stokes equations physics mode was deactivated earlier). (Do not use the _=_ solve button, as this would clear the already computed flow field and instead re-compute the initial conditions.)</txt>"],
["uicontrol","button_restart",[],"Callback",[]],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"After the solution process is done the temperature field can now be plotted and visualized."],
["uicontrol","button_post_settings",[],"Callback",[]],
["uicontrol","post_slice",["Temperature, T"],"Callback",[]],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["uitext*",[],"One can clearly see how the fluid is heated by both the cylinder and walls, and transported away in the direction of the flow."],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""],
["imgcap"],
["uivalidate*",[],"pass=0;try,pass=abs(3.8-intbdr('T',fea,11))/3.8<0.1;catch,end"]
]}
