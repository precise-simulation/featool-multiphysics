{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"06-Feb-2019","descr":"Calculation of the inviscid flow field around a NACA airfoil using the potential equation. The potential or Laplace equation is equivalent to Poisson equation with zero source term. Boundary conditions are set as zero normal flow on the airfoil body, and unit velocity magnitude at the external boundaries of the domain.","dim":2,"image":"airfoil1.jpg","keyw":["naca","airfoil","potential_flow","pde"],"mlver":"R2019a","name":"airfoil1","phys":["Poisson Equation"],"system":"","time":737462,"title":"Potential Flow Over an Airfoil","type":"Fluid Dynamics","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","06_airfoil1.fes",""],
["overlay",["Fluid Dynamics Tutorial","Potential Flow Over an Airfoil"],""],
["overlay",["","Calculation of the inviscid flow field around a <txt>NACA</txt><tts>naka</tts> airfoil using the potential equation. The potential or Laplace equation is equivalent to Poisson equation with a zero source term. Boundary conditions are set as zero normal flow on the airfoil body, and unit velocity magnitude at the external boundaries of the domain."],""],
["msgbox","This tutorial can be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Fluid Dynamics** <txt>></txt><tts>,</tts> **Potential Flow Over an Airfoil** <tts>,</tts> from the **File** menu, and followed along with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","popup_physsel",["Poisson Equation"],"Callback",[]],
["uicontrol","edit_depvar","phi","Callback",[]],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["overlay",["Geometry Mode",""],1],
["uitext",[],"Press the **Create <txt>NACA</txt><tts>naka</tts> airfoil** _Toolbar_ button."],
["uicontrol*","button_naca",[],"Callback",[]],
["uicontrol","edit_series","0012","Callback",[]],
["uicontrol","edit_angle","0","Callback",[]],
["uicontrol","edit_resolution","100","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","button_circle_ellipse",[],"Callback",[[0.5,0],0.3,0.2,"E1"]],
["uicontrol","list_select_gobj",["E1"],"Callback",[]],
["uicontrol","button_edit_gobj",[],"Callback",[]],
["uicontrol","edit_center","0.5 0","Callback",[]],
["uicontrol","edit_x_radius","1.5","Callback",[]],
["uicontrol","edit_y_radius","1.5","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["E1","N1"],"Callback",[]],
["uicontrol","button_subtract_gobj",[],"Callback",[]],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uitext",[],"The default grid may be too coarse to ensure an accurate solution. Press the **Settings** button to open the _Grid Settings_ dialog box, and select the **Gridgen2D** grid generation algorithm."],
["uicontrol*","grid_settings",[],"Callback",[]],
["uicontrol*","grid_settings_algo",[" Gridgen2D"],"Callback",{}],
["uitext",[],"To fine tune the settings, enter `0.3` in the edit field for the _Subdomain Grid Size_ , and <txt>`0.3 0.3 0.3 0.3 0.05 0.05` for the _Boundary Grid Size_</txt><tts>0.3 for the external, and 0.05 for the airfoil boundary grid sizes</tts>. This will ensure that the airfoil boundaries are resolved with fine grid cells, while the rest of the domain uses a coarse grid."],
["uicontrol*","grid_settings_hmax","0.3","Callback",{}],
["uicontrol*","grid_settings_hmaxb","[0.3 0.3 0.3 0.3 0.05 0.05]","Callback",{}],
["uitext",[],"Also select the **Boundary layers** checkbox. This will create structured and higher quality grid cells near the airfoil boundaries."],
["uicontrol*","grid_settings_blayer",1,"Callback",{}],
["uicontrol","button_dlggrid_generate",[],"Callback",[]],
["uicontrol","button_dlggrid_ok",[],"Callback",[]],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"Here the Poisson physics mode is used to model the equation for potential flow. In the _Equation Settings_ dialog box, set the source term coefficient _f_ to `0`, and also select **(P2<txt>/Q2) second order conforming</txt>** for the _<txt>FEM</txt> Discretization_ order<tts>,</tts> to ensure that the velocities <txt>(which are derivatives of the potential)</txt> are represented with high accuracy."],
["uicontrol*","f_poi","0","Callback",[]],
["uicontrol*","popup_sfun_poi",["(P2/Q2) second order conforming"],"Callback",[]],
["uicontrol*","button_dlgeqn_ok",[],"Callback",[]],
["uitext*",[],"A convenient way to define and store coefficients, variables, and expressions is using the _Model Constants and Expressions_ functionality. The defined expressions can then be used in point, equation, boundary coefficients, as well as postprocessing expressions, and can easily be changed and updated in a single place."],
["uitext",[],["Define expressions for the velocities, angle of attack, as well as pressure coefficient by pressing the **Constants** _Toolbar_ button, or selecting the corresponding entry from the _Equation_ menu, and entering the following variables in the _Model Constants and Expressions_ dialog box. Press _Enter_ after the last expression or use the **Add Row** button to expand the expression list.","| Name   | Expression              |","|--------|-------------------------|","|  u     |  phix                   |","|  v     |  phiy                   |","|  U     |  sqrt(u^2+v^2)          |","|  alfa  |  0                      |","|  uinf  |  cos(alfa*pi/180)       |","|  vinf  |  sin(alfa*pi/180)       |","|  cp    |  1-U^2/(uinf^2+vinf^2)  |"]],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uitable*","table_dlgexpr_1_1","u","CellEditCallback",[]],
["uitable*","table_dlgexpr_1_2","phix","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_1","v","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_2","phiy","CellEditCallback",[]],
["uitable*","table_dlgexpr_3_1","U","CellEditCallback",[]],
["uitable*","table_dlgexpr_3_2","sqrt(u^2+v^2)","CellEditCallback",[]],
["uitable*","table_dlgexpr_4_1","alfa","CellEditCallback",[]],
["uitable*","table_dlgexpr_4_2","0","CellEditCallback",[]],
["uitable*","table_dlgexpr_5_1","uinf","CellEditCallback",[]],
["uitable*","table_dlgexpr_5_2","cos(alfa*pi/180)","CellEditCallback",[]],
["uitable*","table_dlgexpr_6_1","vinf","CellEditCallback",[]],
["uitable*","table_dlgexpr_6_2","sin(alfa*pi/180)","CellEditCallback",[]],
["uitable*","table_dlgexpr_7_1","cp","CellEditCallback",[]],
["uitable*","table_dlgexpr_7_2","1-U^2/(uinf^2+vinf^2)","CellEditCallback",[]],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"Normal velocities can naturally be prescribed as _Neumann_ boundary conditions for potential flows. Set the flow at the exterior boundaries to <txt>_nx*uinf+ny*uinf_</txt><tts>the expression for the normal velocity</tts>, and airfoil boundaries to zero <txt>(where _nx_ and _ny_ will be evaluated as the unit normal vectors of the boundaries)</txt>."],
["uitext",[],"Select the outer boundaries <txt>(**1-4**) in the _Boundaries_ list box."],
["uicontrol*","list_seldom",["1","2","3","4"],"Callback",[]],
["uicontrol","popup_selbc_poi",["Neumann boundary condition"],"Callback",[]],
["uicontrol","edit_bccoef1_poi","nx*uinf+ny*vinf","Callback",[]],
["uitext",[],"Select the airfoil boundaries, **5** and **6**, in the _Boundaries_ list box."],
["uicontrol*","list_seldom",["5","6"],"Callback",[]],
["uicontrol","popup_selbc_poi",["Neumann boundary condition"],"Callback",[]],
["uicontrol","edit_bccoef1_poi","0","Callback",[]],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uitext*",[],"One also has to set a reference level for the potential _phi_ at one of the points, in order to ensure a unique solution for stationary problems without any Dirichlet or prescribed value boundary conditions."],
["uitext",[],"Select **Add Point Constraints...** from the _Boundary_ menu, or select the **Point constraints** button in the **Tools** _toolbar_."],
["uimenu*","Point Constraints...",[],"Callback",[]],
["uitext",[],"In the _Point Constraint Settings_ dialog box, select the point at the trailing edge (here _6_), and enter `0` into the corresponding constraint expression edit field for the potential _phi_. Press **OK** to finish and close the dialog box."],
["uicontrol*","list_seldom",["6"],"Callback",[]],
["uicontrol*","edit_pnt_phi","0","Callback",[]],
["uicontrol*","button_dlgpnt_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uicontrol","button_solve",[],"Callback",[]],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"The potential function is displayed by default. Open the _Postprocessing_ settings dialog box and visualize the velocity field _U_ as surface, contour, and arrow plots instead."],
["uicontrol","button_post_settings",[],"Callback",[]],
["uicontrol","ssurfexpr","U","Callback",[]],
["uicontrol","ffiso",1,"Callback",[]],
["uicontrol","sisoexpr","U","Callback",[]],
["uicontrol","sisolev","20","Callback",[]],
["uicontrol","ffarrow",1,"Callback",[]],
["uicontrol","v1arrowexpr","u","Callback",[]],
["uicontrol","v2arrowexpr","v","Callback",[]],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["imgcap"],
["uitext*",[],"Use the _Point/Line Evaluation_ functionality to plot the pressure coefficient _cp_ along the upper wing boundary. At the stagnation point at the left edge<tts>, </tts> the pressure coefficient should be close to _1_, it then rapidly jumps towards _-<tts> minus </tts>0.5_ as the flow quickly accelerates, after which it slowly increases towards the trailing edge."],
["uimenu","Point/Line Evaluation...",{},"Callback",{}],
["uicontrol","list_selbdrcoord",["6"],"Callback",{}],
["uicontrol","edit_evalexpr","cp","Callback",{}],
["uicontrol","buttons_dlgpntline_ok",{},"Callback",{}],
["figure*","Line Evaluation",{},"closeRequestFcn",{}],
["uivalidate*",[],"pass=0;try,ix=fea.grid.b(3,:)==5;ind_c=fea.grid.b(1,ix);ind_e=fea.grid.b(2,ix);iv=unique(fea.grid.c(sub2ind(size(fea.grid.c),[ind_e,mod(ind_e,3)+1],[ind_c,ind_c])));x=evalexprp('x',fea,1,iv);cp=evalexprp('cp',fea,1,iv);cp_ref=[-0.4114,-0.3896,-0.3372,-0.2788,-0.2209,-0.1645,-0.1081,-0.0460,0.0381];cp=interp1(x,cp,0.1:0.1:0.9);err=norm(cp_ref-cp)./norm(cp_ref);pass=err<0.12;catch,end"],
["uitext*",[],"To see how a higher angle of attack effects the flow field, change the previously defined constant _alfa_ and solve the model again."],
["uimenu","Model Constants and Expressions...",{},"Callback",{}],
["uitext",[],"Enter `6` degrees into the expression edit field for the angle of attack, _alfa_."],
["uitable*","table_dlgexpr_4_2","6","CellEditCallback",{}],
["uicontrol","button_dlgexpr_ok",{},"Callback",{}],
["uicontrol","button_solve_mode",1,"Callback",{}],
["uicontrol","button_solve",{},"Callback",{}],
["uitext*",[],"Note that the flow field now is unsymmetric with two stagnation points. As the viscosity and the _Kutta_ condition at the trailing edge is not accounted for in this model, the second stagnation point is found at the rear top boundary of the airfoil<tts>, </tts> instead of at the trailing edge as would typically be expected."],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""]
]}
