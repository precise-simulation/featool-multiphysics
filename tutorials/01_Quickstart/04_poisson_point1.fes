{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"20-Jan-2019","descr":["The classic Poisson equation is one of the most fundamental partial differential equations (PDEs). Although one of the simplest equations, it is a very good model for the process of diffusion and comes up again and again in many applications such as in fluid flow, heat transfer, and chemical transport.","","This example shows how to set up and solve the Poisson equation for a scalar field _u = u(x)_ on a circle with radius _r = 1_. The diffusion coefficient _D = 1_ and right hand side source term _f = delta(0,0)_ which prescribes a point source at the center. The Poisson problem is also considered stationary meaning that time dependent term can be neglected.","","Moreover, homogeneous Dirichlet boundary conditions are prescribed on all boundaries of the domain, that is _u = 0_ on the boundary. The exact solution for this problem is _u(x,y) = -1/(2*pi)*log( r )_ and can be used to measure the accuracy of the computed solution."],"dim":2,"image":"poisson_point1.jpg","keyw":["quickstart","pde","point_source","validation"],"mlver":"R2019a","name":"poisson_point1","phys":["Poisson Equation"],"system":"","time":737445,"title":"Poisson Equation with a Point Source","type":"Classic PDE","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","04_poisson_point1.fes",""],
["overlay",["Quickstart Tutorial","Poisson Equation with a Point Source"],""],
["overlay",["","The classic Poisson equation is one of the most fundamental partial differential equations <txt>(PDE)</txt>. Although one of the simplest equations, it is a very good model for the process of diffusion and comes up again and again in many applications such as in fluid flows, heat transfer, and chemical transport."],""],
["overlay",["","This example shows how to set up and solve the Poisson equation for a scalar field on a unit circle. Fixed value or Dirichlet boundary conditions are prescribed on all boundaries of the domain, and a point source term is applied to the center. This problem formulation has an exact analytical solution, which is used to measure the accuracy of the computed results."],""],
["msgbox","This tutorial can be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Quickstart** <txt>></txt><tts>,</tts> **Poisson Equation with a Point Source** <tts>,</tts> from the **File** menu, and followed with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uitext",[],"In the _New Model_ dialog box, select **2D** for the _Space Dimensions_, and select **Poisson Equation** from the _Select Physics_ drop-down menu. Leave the space dimension and dependent variable names to their defaults, and press **OK** to finish the physics mode selection."],
["uicontrol*","radio_2d",0,"Callback",[]],
["uicontrol*","popup_physsel",["Poisson Equation"],"Callback",[]],
["imgcap"],
["uicontrol*","button_dlgnew_ok",[],"Callback",[]],
["overlay",["Geometry Mode",""],1],
["uicontrol","button_circle_ellipse",[],"Callback",[[0.3,0.5],0.3,0.4,"E1"]],
["uitext",[],"The object properties must be changed to make a unit circle with radius _1_ centered at the origin <txt>_(0, 0)_</txt>. To do this, click on the ellipse **E1** to highlight and select it <txt>(alternatively, select it by clicking on **E1** in the left side toolbar selection list box)</txt>. Then click on the **Inspect/edit selected geometry object** _Toolbar_ button."],
["uicontrol*","list_select_gobj",["E1"],"Callback",[]],
["uicontrol*","button_edit_gobj",[],"Callback",[]],
["uitext",[],"In the **Edit Geometry Object** dialog box change the center coordinates edit field to <txt>`0 0`</txt><tts>zero zero</tts>, and set both the _x_ and _y-radius_ to `1`. Finish editing the geometry object and close the dialog box by clicking **OK**."],
["uicontrol*","edit_center","0 0","Callback",[]],
["uicontrol*","edit_x_radius","1","Callback",[]],
["uicontrol*","edit_y_radius","1","Callback",[]],
["imgcap"],
["uicontrol*","button_dlggobj_ok",[],"Callback",[]],
["uitext*",[],"To make sure that a grid point for the source term will be located exactly at <txt>_(0, 0)_</txt><tts>the origin</tts>, a point geometry object must be created in the center."],
["uitext",[],"To define a point select **Create Object... > Point** from the _Geometry_ menu. This opens a dialog box where you can create a new point object. Enter `0 0` in the edit field for the _Point Coordinates_ and press **OK**. This will add the point _P1_ to the center."],
["uimenu*",["Geometry","Create Object...","Point"],[],"Callback",[]],
["uicontrol*","edit_pntcoord_x","0","Callback",[]],
["uicontrol*","edit_pntcoord_y","0","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgpnt_ok",[],"Callback",[]],
["imgcap"],
["overlay",["Grid Mode",""],1],
["uitext",[],"Press the **Grid** _Mode Toolbar_ button to switch from geometry mode to grid generation mode and initialize a default grid."],
["uicontrol*","button_grid_mode",1,"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"Equation and material coefficients can be specified in _Equation/Subdomain_ mode. In the _Equation Settings_ dialog box that automatically opens, set the _diffusion coefficient D_ to `1`, and _source term f_ to `0` <txt>in the corresponding edit fields</txt>. All other coefficients can be left to their default values. Press **OK** to finish and close the dialog box."],
["uicontrol*","d_poi","1","Callback",[]],
["uicontrol*","f_poi","0","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgeqn_ok",[],"Callback",[]],
["uitext",[],"To add the point source, select **Add Point Sources...** from the _Equation_ menu, or select the **Point sources** button in the **Tools** _toolbar_. Select the center point in the list <txt>(here point number _5_)</txt> in the _Point Source Settings_ dialog box, and enter `1` in the corresponding edit field for the source expression. Press **OK** to finish."],
["uimenu*","Point Sources...",[],"Callback",[]],
["uicontrol*","list_seldom",["5"],"Callback",[]],
["uicontrol*","edit_pnt_u","1","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgpnt_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext",[],"In the _Boundary Settings_ dialog box, select all boundaries in the left hand side _Boundaries_ list box, and choose **Dirichlet boundary condition** in the drop-down menu. Set the Dirichlet boundary coefficient _r_ equal to `0`, and finish by clicking on OK."],
["uicontrol*","list_seldom",["1","2","3","4"],"Callback",[]],
["uicontrol*","popup_selbc_poi",["Dirichlet boundary condition"],"Callback",[]],
["uicontrol*","edit_bccoef1_poi","0","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgbdr_ok",[],"Callback",[]],
["overlay",["Solve Mode",""],1],
["uitext",[],"Now that the problem is fully specified, press the **Solve** _Mode Toolbar_ button to switch to solve mode. Then press the <txt>**=**</txt> _Tool_ button <tts>, with an equals too sign,</tts> to call the solver with the default solver settings."],
["uicontrol*","button_solve_mode",1,"Callback",[]],
["uicontrol*","button_solve",[],"Callback",[]],
["imgcap"],
["overlay",["Postprocessing Mode",""],1],
["uitext",[],"Open the _Postprocessing_ settings dialog box by clicking on the **Plot Options** _Toolbar_ button. To see how the solution looks like in three dimensions, activate **Height Expression** plot by marking the corresponding check box, and press **OK** or _Apply_. The resulting visualization clearly shows how the central point source results in a spike in the solution."],
["uicontrol*","button_post_settings",[],"Callback",[]],
["uicontrol*","ffsurfh",1,"Callback",[]],
["uicontrol*","button_dlgpost_ok",[],"Callback",[]],
["imgcap"],
["uitext",[],"To plot and visualize the difference between the computed and exact reference solution, enter the analytical expression <txt>`abs(u+1/(2*pi)*log(sqrt(x^2+y^2+eps)))`</txt> in the edit field for the _Surface Plot_ expression. The largest errors are clearly found in the center due to the coarse grid. To improve the accuracy one can create a grid that is locally refined around the central point."],
["uicontrol*","button_post_settings",[],"Callback",[]],
["uicontrol*","ffsurfh",0,"Callback",[]],
["uicontrol*","ssurfexpr"," abs(u+1/(2*pi)*log(sqrt(x^2+y^2+eps)))","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgpost_ok",[],"Callback",[]],
["imgcap"],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""],
["uivalidate*",[],"pass=0;try,s_err='abs(u+1/(2*pi)*log(sqrt(x^2+y^2+eps)))';xi=[1/3;1/3;1/3];err=evalexpr0(s_err,xi,1,1:size(fea.grid.c,2),[],fea);ref=evalexpr0('u',xi,1,1:size(fea.grid.c,2),[],fea);pass=sqrt(sum(err.^2)/sum(ref.^2))<0.05;catch,end"]
]}
