{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"21-Jan-2019","descr":["This tutorial explains how to set up and solve a generalized wave equation model. The wave equation is a hyperbolic partial differential equation (PDE) of the form _d2u/dt2 = cd2u/dx2 + f_ where _c_ is a constant defining the propagation speed of the waves, and _f_ is a source term. This equation can not be solved as it is due to the second order time derivative. However, the problem can be transformed by reformulating the wave equation as two coupled parabolic PDEs, that is","","_du/dt = v_, _dv/dt = cd2u/dx2 + f_","","This dual coupled problem can easily be implemented in FEATool with the custom equation feature. This example solves the wave equation on a unit circle, with zero boundary conditions, constant _c = 1_, source term _f = 0_, and initial condition _u(t=0) = 1-(x^2+y^2)_."],"dim":2,"image":"wave_equation1.jpg","keyw":["quickstart","pde","wave_equation","customization"],"mlver":"R2019a","name":"wave_equation1","phys":["Custom Equation"],"system":"","time":737446,"title":"Wave Equation on a Circle","type":"Classic PDE","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","05_wave_equation1.fes",""],
["overlay",["Quickstart Tutorial","Wave Equation on a Circle"],""],
["overlay",["","This tutorial explains how to set up and solve a generalized wave equation model on a unit circle. The wave equation is a hyperbolic partial differential equation <txt>(PDE)</txt>, with second order time derivatives<tts>,</tts> which prevent usual time stepping schemes to be applied. However, the problem can be transformed and solved, as done here, by instead reformulating the wave equation as two coupled parabolic PDEs."],""],
["msgbox","This tutorial can be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Quickstart** <txt>></txt><tts>,</tts> **Wave Equation on a Circle** <tts>,</tts> from the **File** menu, and followed with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uitext",[],"In the **New Model** dialog box, first click on the **2D** radio button in the _Select Space Dimensions_ section, and select **Custom Equation** from the _Select Physics_ drop-down menu. Leave the space dimension names as <txt>_x y_</txt><tts>x and y</tts>, but change the dependent variable names to <tts>u and v</tts><txt>`u v` (the custom equation physics mode allows for entering an arbitrary number of dependent variables)</txt>. This will enable the two parabolic equations for the transformed and coupled wave equation problem. Finish and close the dialog box by clicking on the **OK** button."],
["uicontrol*","radio_2d",0,"Callback",[]],
["uicontrol*","popup_physsel",["Custom Equation"],"Callback",[]],
["uicontrol*","edit_depvar","u v","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgnew_ok",[],"Callback",[]],
["overlay",["Geometry Mode",""],1],
["uitext*",[],"The geometry consists of a unit circle with radius _1_ centered at the origin <txt>_(0, 0)_</txt>."],
["uimenu",["Geometry","Create Object...","Circle"],{},"Callback",{}],
["uicontrol","edit_center","0 0","Callback",[]],
["uicontrol","edit_radius","1","Callback",[]],
["imgcap"],
["uicontrol","button_dlggobj_ok",{},"Callback",[]],
["imgcap"],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uitext*",[],"The default grid may be too coarse to ensure an accurate solution. Decrease the grid size to generate a finer grid<tts>,</tts> which is able to resolve the curved boundary better."],
["uicontrol","grid_hmax","0.1"],
["uicontrol","grid_generate",[],"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"Equation and material coefficients are specified in _Equation/Subdomain_ mode. Set the initial condition <txt>_u0_</txt><tts>u zero</tts> to <txt>`1-(x^2+y^2)`</txt><tts>1 minus the radius,</tts> and <txt>_v0_</txt><tts>v zero</tts> to `0`. Then click on the **edit** button to open the equation editing dialog box."],
["uicontrol*","eqn_init1_ce","1-(x^2+y^2)","Callback",[]],
["imgcap"],
["uitext",[],"In the _Edit Equations_ dialog box enter the two coupled equations <txt>as `u' - v_t = 0`, and `v' - c*(ux_x + uy_y) = 0`</txt> in the corresponding edit fields for _u_ and _v_."],
["uitext*",[],"<txt>Here _u_ and _v_ are the dependent variables, _u'/v'_ denotes a time derivative, and an underscore will treat it implicitly in the weak finite element formulation (for example _v_t_ corresponds to _v_ multiplied with the test function for _u_, and _ux_x_ is analogous to _du/dx*dv_t/dx_). Note, that the first equation could also be written as _u' = v_ but then _v_ would be evaluated explicitly in the right hand side, by transferring it to the implicit left hand side matrix results in a linear problem which is more efficient to solve.</txt>"],
["uicontrol*","button_eqnedit_ce",[],"Callback",[]],
["uicontrol*","edit_eqn1","u' - v_t = 0","Callback",[]],
["uicontrol*","edit_eqn2","v' - c*(ux_x + uy_y) = 0","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgediteqn_ok",[],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uitext*",[],"A convenient way to define and store coefficients, variables, and expressions is using the _Model Constants and Expressions_ functionality. The defined expressions can then be used in point, equation, boundary coefficients, as well as postprocessing expressions, and can easily be changed and updated in a single place."],
["uitext",[],"Click on the **Constants** _Toolbar_ button<tts>,</tts> and enter a new constant named `c`<tts>,</tts> with a value of `1` for the wave speed <txt>(this is the constant used in diffusion term of the second _v_ equation)</txt>. Press **OK** to finish."],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uitable*","table_dlgexpr_1_1","c","CellEditCallback",[]],
["uitable*","table_dlgexpr_1_2","1","CellEditCallback",[]],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["overlay",["Boundary Mode",""],1],
["uitext",[],"Press the **Boundary** _Mode Toolbar_ button to change to boundary condition specification mode, and select **Dirichlet conditions** with a fixed value of <txt>`0`</txt><tts>zero</tts> for all boundaries."],
["uicontrol*","button_boundary_mode",1,"Callback",[]],
["uicontrol*","list_seldom",["1","2","3","4"],"Callback",[]],
["uicontrol*","edit_bccoef13_ce","0","Callback",[]],
["uicontrol*","edit_bccoef23_ce","0","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uitext",[],"Press the **Settings** _Toolbar_ button to open the _Solver Settings_ dialog box, select the **Time-Dependent** _Solver Type_ option, and set the _Time step_ to `0.05`."],
["uicontrol*","button_solver_settings",[],"Callback",[]],
["uicontrol*","solver",[" Time-Dependent"],"Callback",[]],
["uicontrol*","tstep","0.05","Callback",[]],
["imgcap"],
["uitext",[],"Press the **Solve** button to start the solver with the chosen settings, or press **OK** and then the <txt>**=**</txt> _Toolbar_ button<tts> with an equals too sign</tts>."],
["uicontrol*","button_dlgsolversettings_solve",[],"Callback",[]],
["imgcap"],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"The solution at different time steps can be visualized by selecting the corresponding solution times, and plot options in the postprocessing settings dialog box."],
["uicontrol","button_post_settings",[],"Callback",[]],
["uicontrol","ffsurfh",1,"Callback",[]],
["uicontrol","fsolnum",["0.65"],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["imgcap"],
["uitext*",[],"To create an animation or video of the solution<tts>,</tts> one can use the _Animate/Playback Solution..._ option in the _Post_ menu."],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""],
["uivalidate*",[],"pass=0;try,u_ref=-0.958;[~,isol]=min(abs(fea.sol.t-1));pass=abs(u_ref-evalexpr('u',[0;0],fea,isol))/abs(u_ref)<0.1;catch,end"]
]}
