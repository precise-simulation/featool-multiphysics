{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"17-Jan-2019","descr":["This heat exchanger example illustrates multiphysics modeling capabilities of FEATool. The model consists of a series of heated pipes surrounded by a fluid at a lower temperature, and features effects of both free and forced convection. Two types of physical phenomena are considered, fluid flow which is modeled by the Navier-Stokes equations, and heat transfer modeled by a convection and conduction transport equation for the temperature. This system features a two-way multiphysics coupling, the fluid is coupled to and transports the temperature field, and the temperature is also coupled back to the fluid via the Boussinesq approximation accounting for buoyancy effects.","","Due to symmetry one can simplify the full geometry and only study a two dimensional slice between the heated pipes. The geometry will therefore consist of a _0.0075_ by _0.05 m_ rectangle from which a half circle with radius _0.003 m_ centered at _(0, 0.02)_ is removed. The mechanism for heating the pipes is not taken in consideration and are thus assumed to be at a fixed temperature of _Th = 330 K_. A cooling fluid flows from the bottom to the top and has an inlet temperature of _Tc = 300 K_. The other fluid and material parameters can be found in the model tutorial."],"dim":2,"image":"heat_exchanger1.jpg","keyw":["quickstart","heat_exchanger"],"mlver":"R2019a","name":"heat_exchanger1","phys":["Heat Transfer","Navier-Stokes Equations"],"system":"","time":737442,"title":"Heat Exchanger","type":"Multiphysics","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["introdlg","02_heat_exchanger1.fes",""],
["overlay",["Quickstart Tutorial","Natural and Forced Convection in a Heat Exchanger"],""],
["overlay",["","This heat exchanger model consists of a low temperature coolant flowing around a series of heated pipes. The multiphysics simulation involves both natural convection, through buoyancy effects, as well as forced convection, by coupling transport of the temperature field with the fluid flow."],""],
["msgbox","This tutorial can be run by selecting <tts>,</tts> **Model Examples and Tutorials...** <txt>></txt><tts>,</tts> **Quickstart** <txt>></txt><tts>,</tts> **Heat Exchanger** <tts>,</tts> from the **File** menu, and followed with the step-by-step instructions in the _<txt>User's</txt><tts>users</tts> Guide_.",""],
["pause","","2"],
["introdlg","close",""],
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","radio_2d",0,"Callback",[]],
["uitext",[],"Select the **Navier-Stokes Equations** physics mode from the _Select Physics_ drop-down menu. An additional physics mode will be added later to couple and model heat transfer effects."],
["uicontrol*","popup_physsel",["Navier-Stokes Equations"],"Callback",[]],
["imgcap"],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["overlay",["Geometry Mode",""],1],
["uitext*",[],"Only the fluid surrounding the heat exchanger will be modeled. And by using all symmetry planes, the geometry can be simplified to a two-dimensional planar cross section, which can be constructed by making a rectangle from which a circle is subtracted."],
["uicontrol","button_rectangle",[],"Callback",[0,1,0,1,"R1"]],
["uitext",[],"The geometry object properties must now be edited to set the correct size and position of the rectangle. To do this, click on the rectangle **R1** to select it, which also highlights it in red. Then click on the **Inspect/edit selected geometry object** _Toolbar_ button, and change the _min_ and _max_ coordinates of the rectangle<tts>,</tts> so they span between `0` and `0.0075` in the x-direction, and `0` and `0.05` in the y-direction."],
["uicontrol*","list_select_gobj",["R1"],"Callback",[]],
["imgcap"],
["uicontrol*","button_edit_gobj",[],"Callback",[]],
["uicontrol*","edit_x_min","0","Callback",[]],
["uicontrol*","edit_x_max","0.0075","Callback",[]],
["uicontrol*","edit_y_min","0","Callback",[]],
["uicontrol*","edit_y_max","0.05","Callback",[]],
["imgcap"],
["uicontrol*","button_dlggobj_ok",[],"Callback",[]],
["uitext",[],"Create a circle with center at _(0, 0.02)_, and radius equal to _0.003_."],
["uimenu",["Geometry","Create Object...","Circle"],[],"Callback",[]],
["uicontrol","edit_center","0 0.02","Callback",[]],
["uicontrol","edit_radius","0.003","Callback",[]],
["imgcap"],
["uicontrol","button_dlggobj_ok",{},"Callback",{}],
["uitext",[],"To subtract the circle from the rectangle, first select both geometry objects by clicking on them, so that both are highlighted in red, and then click on the **- / Subtract geometry objects** button. (Alternatively, if the circle is obscured by the rectangle<tts>,</tts> they can be selected by holding the _Ctrl_ key, while clicking on the labels **R1** and **C1** in the Selection list box, or in this case simply pressing _Ctrl + A_ to select all objects)."],
["uicontrol*","list_select_gobj",["R1","C1"],"Callback",[]],
["uicontrol*","button_subtract_gobj",[],"Callback",[]],
["imgcap"],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uitext*",[],"The default grid may be too coarse to ensure an accurate solution. Decreasing the grid size and generating a finer grid can resolve curved boundaries better."],
["uicontrol","grid_hmax","0.0005"],
["uitext",[],"Press the **Generate** button to call the automatic grid generation algorithm."],
["uicontrol*","grid_generate",[],"Callback",[]],
["imgcap"],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"Equation and material coefficients are specified in _Equation/Subdomain_ mode. In the Equation Settings dialog box<tts>,</tts> enter the following coefficients, `rho` for the density, `mu` for the viscosity, and <txt>`alpha*g*rho*(T-Tc)`</txt><tts>alpha g rho T minus Tc</tts> for the volume and buoyancy force in the y-direction."],
["uicontrol*","rho_ns","rho","Callback",[]],
["uicontrol*","miu_ns","mu","Callback",[]],
["uicontrol*","Fy_ns","alpha*g*rho*(T-Tc)","Callback",[]],
["imgcap"],
["uitext",[],"An equation and physics mode for simulation of heat transfer effects must also be added. To access the multiphysics selection and add another physics mode, press the plus **+** tab and select **Heat Transfer** from the _Select Physics_ drop-down menu. Add the selection by pressing the **Add Physics >>>** button."],
["uicontrol*","tab_+",0,"Callback",[]],
["uicontrol*","popup_physsel",["Heat Transfer"],"Callback",[]],
["imgcap"],
["uicontrol*","button_addphys",[],"Callback",[]],
["uitext*",[],"Note that each physics mode will have its own tab for _Subdomain and Equation_ settings, as well as _Boundary_ conditions. Moreover, FEATool works with any unit system, and it is up to the user to use consistent units for geometry dimensions, material, equation, and boundary coefficients."],
["uitext",[],"In the _Equation Settings_ tab for the heat transfer physics mode (labeled **ht**), set the _density_ to `rho`, _heat capacity_ to `cp`, and _thermal conductivity_ to `k`<txt>, respectively</txt>. The convective velocities should be coupled from the Navier-Stokes equations physics mode, to do this enter `u` and `v` in the corresponding edit fields (<tts>,</tts>as these are the default names of the dependent variables for the velocities). Press **OK** to finish with the equation coefficient specifications."],
["uicontrol*","rho_ht","rho","Callback",[]],
["uicontrol*","cp_ht","cp","Callback",[]],
["uicontrol*","k_ht","k","Callback",[]],
["uicontrol*","u_ht","u","Callback",[]],
["uicontrol*","v_ht","v","Callback",[]],
["imgcap"],
["uicontrol*","button_dlgeqn_ok",[],"Callback",[]],
["uitext*",[],"The _Model Constants and Expressions_ functionality can be used to define and store convenient expressions which then are available in the point, equation, boundary coefficients, and as postprocessing expressions. Here it is used to define the material and fluid parameters."],
["uitext",[],["Press the **Constants** _Toolbar_ button, or select the corresponding entry from the _Equation_ menu, and enter the following variables in the _Model Constants and Expressions_ dialog box. Press _Enter_ after the last expression or use the **Add Row** button to expand the expression list.","| Name    | Expression |","|---------|------------|","|  rho    |  22        |","|  mu     |  2.8e-3    |","|  alpha  |  0.26e-3   |","|  g      |  9.81      |","|  Tc     |  300       |","|  vin    |  40e-2     |","|  k      |  0.55      |","|  cp     |  3.1e3     |","|  Th     |  330       |"]],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uitable*","table_dlgexpr_1_1","rho","CellEditCallback",[]],
["uitable*","table_dlgexpr_1_2","22","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_1","mu","CellEditCallback",[]],
["uitable*","table_dlgexpr_2_2","2.8e-3","CellEditCallback",[]],
["uitable*","table_dlgexpr_3_1","alpha","CellEditCallback",[]],
["uitable*","table_dlgexpr_3_2","0.26e-3","CellEditCallback",[]],
["uitable*","table_dlgexpr_4_1","g","CellEditCallback",[]],
["uitable*","table_dlgexpr_4_2","9.81","CellEditCallback",[]],
["uitable*","table_dlgexpr_5_1","Tc","CellEditCallback",[]],
["uitable*","table_dlgexpr_5_2","300","CellEditCallback",[]],
["uitable*","table_dlgexpr_6_1","vin","CellEditCallback",[]],
["uitable*","table_dlgexpr_6_2","40e-2","CellEditCallback",[]],
["uitable*","table_dlgexpr_7_1","k","CellEditCallback",[]],
["uitable*","table_dlgexpr_7_2","0.55","CellEditCallback",[]],
["uitable*","table_dlgexpr_8_1","cp","CellEditCallback",[]],
["uitable*","table_dlgexpr_8_2","3.1e3","CellEditCallback",[]],
["uitable*","table_dlgexpr_9_1","Th","CellEditCallback",[]],
["uitable*","table_dlgexpr_9_2","330","CellEditCallback",[]],
["imgcap"],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"Boundary conditions are defined in _Boundary Mode_ and describes how the model interacts with the external environment."],
["uitext",[],"First select the tab labeled **ns**, which allows for specifying boundary conditions for the Navier-Stokes equations physics mode. Then select all vertical boundaries <txt>(here **2**, **4**, and **7**, highlighting them in red)</txt>, and choose **Symmetry/slip** from the drop down box. Switch to the heat transfer physics mode by selecting the **ht** tab, and choose the **Thermal insulation/symmetry** boundary condition."],
["uicontrol*","list_seldom",["2","4","7"],"Callback",[]],
["uicontrol*","popup_selbc_ns",["Symmetry/slip"],"Callback",[]],
["imgcap"],
["uicontrol*","tab_ht",0,"Callback",[]],
["uicontrol*","popup_selbc_ht",["Thermal insulation/symmetry"],"Callback",[]],
["uitext",[],"Continue with the top boundary <txt>(number **3**)</txt> which is the outflow. Select **Outflow/pressure** for the Navier-Stokes physics mode, and **Convective flux/outflow** for the heat transfer mode."],
["uicontrol*","list_seldom",["3"],"Callback",[]],
["uicontrol*","tab_ns",0,"Callback",[]],
["uicontrol*","popup_selbc_ns",["Outflow/pressure"],"Callback",[]],
["uitext",[],"The bottom boundary <txt>(number **1**)</txt> is the inflow and should be prescribed with the constant velocity <txt>`vin`</txt><tts>v in</tts> in the y-direction, by using the **Inlet/velocity** condition. The **Temperature** should here be fixed to the cold/low temperature, `Tc`."],
["uicontrol*","list_seldom",["1"],"Callback",[]],
["uicontrol*","popup_selbc_ns",["Inlet/velocity"],"Callback",[]],
["uicontrol*","edit_bccoef2_ns","vin","Callback",[]],
["uicontrol*","tab_ht",0,"Callback",[]],
["uicontrol*","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol*","edit_bccoef1_ht","Tc","Callback",[]],
["uitext",[],"Lastly, the boundaries on the cylinder <txt>(**5** and **6**)</txt> are walls, and should be prescribed with **Wall/no-slip** boundary conditions for the velocity. For the **Temperature** the constant high temperature, `Th`, should be prescribed."],
["uicontrol*","list_seldom",["5","6"],"Callback",[]],
["uicontrol*","popup_selbc_ht",["Temperature"],"Callback",[]],
["uicontrol*","edit_bccoef1_ht","Th","Callback",[]],
["uicontrol*","tab_ns",0,"Callback",[]],
["uicontrol*","popup_selbc_ns",["Wall/no-slip"],"Callback",[]],
["imgcap"],
["uicontrol*","button_dlgbdr_ok",[],"Callback",[]],
["overlay",["Solve Mode",""],1],
["uitext",[],"Now that the problem is fully specified, press the **Solve** _Mode Toolbar_ button to switch to solve mode. Then press the <txt>**=**</txt> _Tool_ button <tts>, with an equals too sign,</tts> to call the solver with the default solver settings."],
["uicontrol*","button_solve_mode",1,"Callback",[]],
["uicontrol*","button_solve",[],"Callback",[]],
["overlay",["Postprocessing Mode",""],1],
["uitext*",[],"From the visualization of the resulting flow field one can see that the flow is accelerated when it passes between the cylinders. To show the temperature field, open the **Plot Options** and postprocessing settings dialog box, and select to plot and visualize the **Temperature,<txt> T</txt>** as both _surface_ and _contour_ plots."],
["imgcap"],
["uicontrol*","button_post_settings",[],"Callback",[]],
["uicontrol*","post_surf",["Temperature, T"],"Callback",[]],
["uicontrol*","ffiso",1,"Callback",[]],
["uicontrol*","post_iso",["Temperature, T"],"Callback",[]],
["imgcap"],
["uicontrol*","button_dlgpost_ok",[],"Callback",[]],
["uitext*",[],"The temperature plot show that the fluid is heated around the hot cylinder and follows the flow upwards."],
["uitext*",[],"FEATool also allows for advanced postprocessing such as boundary integration. Integrate the expression <txt>_(T-Tc)/w_</txt><tts>, T minus T c divided by the width,</tts> over the outflow boundary <txt>(where _w = 0.0075_ is the width of the domain)</txt> to find the change in the mean temperature."],
["uimenu","Boundary Integration...",[],"Callback",[]],
["uicontrol","list_seldom",["3"],"Callback",[]],
["uicontrol","edit_intexpr","(T-Tc)/0.0075","Callback",[]],
["imgcap"],
["uitext",[],"Press **OK** or _Apply_ to calculate and show the result of the boundary integration."],
["uicontrol*","button_dlginteval_ok",[],"Callback",[]],
["uitext*",[],"From the result one can see that the mean temperature along the outflow boundary has risen by about _1.7_ degrees."],
["imgcap"],
["overlay",["","<speak>The tutorial is now complete, and the model can be saved as a binary file <txt>(_.fea_)</txt>, <break time=\"0.3s\"/>exported as a MATLAB _m_-script file, <break time=\"0.3s\"/>or a GUI playback file <txt>(_.fes_)</txt>.</speak>"],""],
["uivalidate*",[],"pass=0;try,pass=abs(intbdr('T-Tc',fea,3)/0.0075-1.7)/1.7<0.1;catch,end"]
]}
